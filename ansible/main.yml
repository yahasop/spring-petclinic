- hosts: appserver
  become: yes
  
  tasks:

    - name: Set AWS Credentials
      set_fact:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        AWS_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
    
    - name: Insstall Pip
      apt:
        name: python3-pip

    - name: Install Boto3
      pip:
        name: boto3
    
    - name: Get instance profile info
      amazon.aws.aws_caller_info:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        aws_region: "{{ AWS_REGION }}"
      register: aws_info

    - name: Set ECR URL
      set_fact:
        ecr_registry_url: "{{ aws_info.account }}.dkr.ecr.us-east-1.amazonaws.com"

    - name: Get ECR token
      shell: "aws ecr get-login-password --region us-east-1"
      register: ecr_token
      environment:
        AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"

    - name: Get ECR Repo Name
      shell: "aws ecr describe-repositories | jq -r .repositories[0].repositoryName"
      register: ecr_repo_name

    - name: Set ECR repo name as a fact
      set_fact:
        ecr_repo_name: "{{ ecr_repo_name.stdout }}"

    - name: Log into ECR registry
      community.docker.docker_login:
        registry_url: "{{ ecr_registry_url }}"
        debug: yes
        username: "AWS"
        password: "{{ ecr_token.stdout }}"
        reauthorize: yes
    
    - name: Pull container
      community.docker.docker_image_pull:
        name: "{{ ecr_registry_url }}/my-ecr"

    - name: Container present
      community.docker.docker_container:
        name: petclinic
        state: started
        image: "{{ ecr_registry_url }}/my-ecr"
        ports:
        - "8080:8080"