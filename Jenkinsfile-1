pipeline {
    agent {
        label 'agent2'
    }
    
    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = "us-east-1"
    }

    stages {

        stage('CreateGHRelease') {
            steps {
                createGitHubRelease commitish: 'main', credentialId: 'github-token', draft: false, prerelease: false, repository: 'yahasop/spring-petclinic', tag: "1.0.${env.BUILD_NUMBER}"
            }
        }
        
        stage('ListGHReleases') {
            steps {
                //This uses the Github Release
                script {
                    def releases = listGitHubReleases(
                        credentialId: 'github-token', 
                        includeDrafts: false, 
                        repository: 'yahasop/spring-petclinic', 
                        sortAscending: false, 
                        tagNamePattern: '1.'
                    )
                    echo "Releases: ${releases[0]?.tagName}"
                }
            }
        }
        
        stage('Pulling and Deploy Image') {

            steps {
                sh 'sshpass -p ubuntu ansible-playbook -i /home/ubuntu/jenkins/workspace/provision-infrastructure/ansible/hosts ./ansible/add-sudoers.yml -u ubuntu -k'
                //sh 'aws configure set region us-east-1'
                //sh 'chmod u+x docker-pulling-image.sh'
                //sh './docker-pulling-image.sh'
            }
        }
        stage('Deploying'){
            steps {
                /*
                script {
                    //ECR_URL="$()"
                    //ECR_NAME="$()"
                    ECR_URL = sh(returnStdout: true, script: 'aws ecr describe-repositories | jq -r .repositories[0].repositoryUri | cut -d '/' -f 1').trim()
                    ECR_NAME = sh(returnStdout: true, script: 'aws ecr describe-repositories | jq -r .repositories[0].repositoryName').trim()
                    //currentBuild.displayName = "$CURRENT_BRANCH - $CURRENT_HASH"
                }
                */
                withCredentials([string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'), string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')]) {
                    /*
                    sh '''
                        export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                        export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                        export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
                        ansible-playbook -i /home/ubuntu/jenkins/workspace/provision-infrastructure/ansible/hosts ./ansible/main.yml
                    '''
                    */
                    sh '''
                        ansible-playbook -i /home/ubuntu/jenkins/workspace/provision-infrastructure/ansible/hosts ./ansible/main.yml \
                        -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
                        -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
                        -e AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
                    '''
                }
            }
        }
    }
}